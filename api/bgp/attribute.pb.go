// Code generated by protoc-gen-go. DO NOT EDIT.
// source: attribute.proto

/*
Package bgpapi is a generated protocol buffer package.

It is generated from these files:
	attribute.proto

It has these top-level messages:
	OriginAttribute
	AsSegment
	AsPathAttribute
	NextHopAttribute
	MultiExitDiscAttribute
	LocalPrefAttribute
	AtomicAggregateAttribute
	AggregatorAttribute
	CommunitiesAttribute
	OriginatorIdAttribute
	ClusterListAttribute
	IPAddressPrefix
	LabeledIPAddressPrefix
	EncapsulationNLRI
	RouteDistinguisherTwoOctetAS
	RouteDistinguisherIPAddress
	RouteDistinguisherFourOctetAS
	EthernetSegmentIdentifier
	EVPNEthernetAutoDiscoveryRoute
	EVPNMACIPAdvertisementRoute
	EVPNInclusiveMulticastEthernetTagRoute
	EVPNEthernetSegmentRoute
	EVPNIPPrefixRoute
	LabeledVPNIPAddressPrefix
	RouteTargetMembershipNLRI
	FlowSpecIPPrefix
	FlowSpecMAC
	FlowSpecComponentItem
	FlowSpecComponent
	FlowSpecNLRI
	VPNFlowSpecNLRI
	OpaqueNLRI
	MpReachNLRIAttribute
	MpUnreachNLRIAttribute
	TwoOctetAsSpecificExtended
	IPv4AddressSpecificExtended
	FourOctetAsSpecificExtended
	ValidationExtended
	ColorExtended
	EncapExtended
	DefaultGatewayExtended
	OpaqueExtended
	ESILabelExtended
	ESImportRouteTarget
	MacMobilityExtended
	RouterMacExtended
	TrafficRateExtended
	TrafficActionExtended
	RedirectTwoOctetAsSpecificExtended
	RedirectIPv4AddressSpecificExtended
	RedirectFourOctetAsSpecificExtended
	TrafficRemarkExtended
	UnknownExtended
	ExtendedCommunitiesAttribute
	As4PathAttribute
	As4AggregatorAttribute
	PmsiTunnelAttribute
	TunnelEncapSubTLVEncapsulation
	TunnelEncapSubTLVProtocol
	TunnelEncapSubTLVColor
	TunnelEncapSubTLVUnknown
	TunnelEncapTLV
	TunnelEncapAttribute
	IPv6AddressSpecificExtended
	RedirectIPv6AddressSpecificExtended
	IP6ExtendedCommunitiesAttribute
	AigpTLVIGPMetric
	AigpTLVUnknown
	AigpAttribute
	LargeCommunity
	LargeCommunitiesAttribute
	UnknownAttribute
*/
package bgpapi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type OriginAttribute struct {
	Origin uint32 `protobuf:"varint,1,opt,name=origin" json:"origin,omitempty"`
}

func (m *OriginAttribute) Reset()                    { *m = OriginAttribute{} }
func (m *OriginAttribute) String() string            { return proto.CompactTextString(m) }
func (*OriginAttribute) ProtoMessage()               {}
func (*OriginAttribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *OriginAttribute) GetOrigin() uint32 {
	if m != nil {
		return m.Origin
	}
	return 0
}

type AsSegment struct {
	Type    uint32   `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Numbers []uint32 `protobuf:"varint,2,rep,packed,name=numbers" json:"numbers,omitempty"`
}

func (m *AsSegment) Reset()                    { *m = AsSegment{} }
func (m *AsSegment) String() string            { return proto.CompactTextString(m) }
func (*AsSegment) ProtoMessage()               {}
func (*AsSegment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AsSegment) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *AsSegment) GetNumbers() []uint32 {
	if m != nil {
		return m.Numbers
	}
	return nil
}

type AsPathAttribute struct {
	Segments []*AsSegment `protobuf:"bytes,1,rep,name=segments" json:"segments,omitempty"`
}

func (m *AsPathAttribute) Reset()                    { *m = AsPathAttribute{} }
func (m *AsPathAttribute) String() string            { return proto.CompactTextString(m) }
func (*AsPathAttribute) ProtoMessage()               {}
func (*AsPathAttribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AsPathAttribute) GetSegments() []*AsSegment {
	if m != nil {
		return m.Segments
	}
	return nil
}

type NextHopAttribute struct {
	NextHop string `protobuf:"bytes,1,opt,name=next_hop,json=nextHop" json:"next_hop,omitempty"`
}

func (m *NextHopAttribute) Reset()                    { *m = NextHopAttribute{} }
func (m *NextHopAttribute) String() string            { return proto.CompactTextString(m) }
func (*NextHopAttribute) ProtoMessage()               {}
func (*NextHopAttribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *NextHopAttribute) GetNextHop() string {
	if m != nil {
		return m.NextHop
	}
	return ""
}

type MultiExitDiscAttribute struct {
	Med uint32 `protobuf:"varint,1,opt,name=med" json:"med,omitempty"`
}

func (m *MultiExitDiscAttribute) Reset()                    { *m = MultiExitDiscAttribute{} }
func (m *MultiExitDiscAttribute) String() string            { return proto.CompactTextString(m) }
func (*MultiExitDiscAttribute) ProtoMessage()               {}
func (*MultiExitDiscAttribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *MultiExitDiscAttribute) GetMed() uint32 {
	if m != nil {
		return m.Med
	}
	return 0
}

type LocalPrefAttribute struct {
	LocalPref uint32 `protobuf:"varint,1,opt,name=local_pref,json=localPref" json:"local_pref,omitempty"`
}

func (m *LocalPrefAttribute) Reset()                    { *m = LocalPrefAttribute{} }
func (m *LocalPrefAttribute) String() string            { return proto.CompactTextString(m) }
func (*LocalPrefAttribute) ProtoMessage()               {}
func (*LocalPrefAttribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *LocalPrefAttribute) GetLocalPref() uint32 {
	if m != nil {
		return m.LocalPref
	}
	return 0
}

type AtomicAggregateAttribute struct {
}

func (m *AtomicAggregateAttribute) Reset()                    { *m = AtomicAggregateAttribute{} }
func (m *AtomicAggregateAttribute) String() string            { return proto.CompactTextString(m) }
func (*AtomicAggregateAttribute) ProtoMessage()               {}
func (*AtomicAggregateAttribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type AggregatorAttribute struct {
	As      uint32 `protobuf:"varint,2,opt,name=as" json:"as,omitempty"`
	Address string `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
}

func (m *AggregatorAttribute) Reset()                    { *m = AggregatorAttribute{} }
func (m *AggregatorAttribute) String() string            { return proto.CompactTextString(m) }
func (*AggregatorAttribute) ProtoMessage()               {}
func (*AggregatorAttribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *AggregatorAttribute) GetAs() uint32 {
	if m != nil {
		return m.As
	}
	return 0
}

func (m *AggregatorAttribute) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type CommunitiesAttribute struct {
	Communities []uint32 `protobuf:"varint,1,rep,packed,name=communities" json:"communities,omitempty"`
}

func (m *CommunitiesAttribute) Reset()                    { *m = CommunitiesAttribute{} }
func (m *CommunitiesAttribute) String() string            { return proto.CompactTextString(m) }
func (*CommunitiesAttribute) ProtoMessage()               {}
func (*CommunitiesAttribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *CommunitiesAttribute) GetCommunities() []uint32 {
	if m != nil {
		return m.Communities
	}
	return nil
}

type OriginatorIdAttribute struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *OriginatorIdAttribute) Reset()                    { *m = OriginatorIdAttribute{} }
func (m *OriginatorIdAttribute) String() string            { return proto.CompactTextString(m) }
func (*OriginatorIdAttribute) ProtoMessage()               {}
func (*OriginatorIdAttribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *OriginatorIdAttribute) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ClusterListAttribute struct {
	Ids []string `protobuf:"bytes,1,rep,name=ids" json:"ids,omitempty"`
}

func (m *ClusterListAttribute) Reset()                    { *m = ClusterListAttribute{} }
func (m *ClusterListAttribute) String() string            { return proto.CompactTextString(m) }
func (*ClusterListAttribute) ProtoMessage()               {}
func (*ClusterListAttribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ClusterListAttribute) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

// IPAddressPrefix represents the NLRI for:
// - AFI=1, SAFI=1
// - AFI=2, SAFI=1
type IPAddressPrefix struct {
	PrefixLen uint32 `protobuf:"varint,1,opt,name=prefix_len,json=prefixLen" json:"prefix_len,omitempty"`
	Prefix    string `protobuf:"bytes,2,opt,name=prefix" json:"prefix,omitempty"`
}

func (m *IPAddressPrefix) Reset()                    { *m = IPAddressPrefix{} }
func (m *IPAddressPrefix) String() string            { return proto.CompactTextString(m) }
func (*IPAddressPrefix) ProtoMessage()               {}
func (*IPAddressPrefix) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *IPAddressPrefix) GetPrefixLen() uint32 {
	if m != nil {
		return m.PrefixLen
	}
	return 0
}

func (m *IPAddressPrefix) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

// LabeledIPAddressPrefix represents the NLRI for:
// - AFI=1, SAFI=4
// - AFI=2, SAFI=4
type LabeledIPAddressPrefix struct {
	Labels    []uint32 `protobuf:"varint,1,rep,packed,name=labels" json:"labels,omitempty"`
	PrefixLen uint32   `protobuf:"varint,2,opt,name=prefix_len,json=prefixLen" json:"prefix_len,omitempty"`
	Prefix    string   `protobuf:"bytes,3,opt,name=prefix" json:"prefix,omitempty"`
}

func (m *LabeledIPAddressPrefix) Reset()                    { *m = LabeledIPAddressPrefix{} }
func (m *LabeledIPAddressPrefix) String() string            { return proto.CompactTextString(m) }
func (*LabeledIPAddressPrefix) ProtoMessage()               {}
func (*LabeledIPAddressPrefix) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *LabeledIPAddressPrefix) GetLabels() []uint32 {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *LabeledIPAddressPrefix) GetPrefixLen() uint32 {
	if m != nil {
		return m.PrefixLen
	}
	return 0
}

func (m *LabeledIPAddressPrefix) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

// EncapsulationNLRI represents the NLRI for:
// - AFI=1, SAFI=7
// - AFI=2, SAFI=7
type EncapsulationNLRI struct {
	Address string `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
}

func (m *EncapsulationNLRI) Reset()                    { *m = EncapsulationNLRI{} }
func (m *EncapsulationNLRI) String() string            { return proto.CompactTextString(m) }
func (*EncapsulationNLRI) ProtoMessage()               {}
func (*EncapsulationNLRI) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *EncapsulationNLRI) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type RouteDistinguisherTwoOctetAS struct {
	Admin    uint32 `protobuf:"varint,1,opt,name=admin" json:"admin,omitempty"`
	Assigned uint32 `protobuf:"varint,2,opt,name=assigned" json:"assigned,omitempty"`
}

func (m *RouteDistinguisherTwoOctetAS) Reset()                    { *m = RouteDistinguisherTwoOctetAS{} }
func (m *RouteDistinguisherTwoOctetAS) String() string            { return proto.CompactTextString(m) }
func (*RouteDistinguisherTwoOctetAS) ProtoMessage()               {}
func (*RouteDistinguisherTwoOctetAS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *RouteDistinguisherTwoOctetAS) GetAdmin() uint32 {
	if m != nil {
		return m.Admin
	}
	return 0
}

func (m *RouteDistinguisherTwoOctetAS) GetAssigned() uint32 {
	if m != nil {
		return m.Assigned
	}
	return 0
}

type RouteDistinguisherIPAddress struct {
	Admin    string `protobuf:"bytes,1,opt,name=admin" json:"admin,omitempty"`
	Assigned uint32 `protobuf:"varint,2,opt,name=assigned" json:"assigned,omitempty"`
}

func (m *RouteDistinguisherIPAddress) Reset()                    { *m = RouteDistinguisherIPAddress{} }
func (m *RouteDistinguisherIPAddress) String() string            { return proto.CompactTextString(m) }
func (*RouteDistinguisherIPAddress) ProtoMessage()               {}
func (*RouteDistinguisherIPAddress) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *RouteDistinguisherIPAddress) GetAdmin() string {
	if m != nil {
		return m.Admin
	}
	return ""
}

func (m *RouteDistinguisherIPAddress) GetAssigned() uint32 {
	if m != nil {
		return m.Assigned
	}
	return 0
}

type RouteDistinguisherFourOctetAS struct {
	Admin    uint32 `protobuf:"varint,1,opt,name=admin" json:"admin,omitempty"`
	Assigned uint32 `protobuf:"varint,2,opt,name=assigned" json:"assigned,omitempty"`
}

func (m *RouteDistinguisherFourOctetAS) Reset()                    { *m = RouteDistinguisherFourOctetAS{} }
func (m *RouteDistinguisherFourOctetAS) String() string            { return proto.CompactTextString(m) }
func (*RouteDistinguisherFourOctetAS) ProtoMessage()               {}
func (*RouteDistinguisherFourOctetAS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *RouteDistinguisherFourOctetAS) GetAdmin() uint32 {
	if m != nil {
		return m.Admin
	}
	return 0
}

func (m *RouteDistinguisherFourOctetAS) GetAssigned() uint32 {
	if m != nil {
		return m.Assigned
	}
	return 0
}

type EthernetSegmentIdentifier struct {
	Type  uint32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *EthernetSegmentIdentifier) Reset()                    { *m = EthernetSegmentIdentifier{} }
func (m *EthernetSegmentIdentifier) String() string            { return proto.CompactTextString(m) }
func (*EthernetSegmentIdentifier) ProtoMessage()               {}
func (*EthernetSegmentIdentifier) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *EthernetSegmentIdentifier) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *EthernetSegmentIdentifier) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

// EVPNEthernetAutoDiscoveryRoute represents the NLRI for:
// - AFI=25, SAFI=70, RouteType=1
type EVPNEthernetAutoDiscoveryRoute struct {
	// One of:
	// - RouteDistinguisherTwoOctetAS
	// - RouteDistinguisherIPAddressAS
	// - RouteDistinguisherFourOctetAS
	Rd          *google_protobuf.Any       `protobuf:"bytes,1,opt,name=rd" json:"rd,omitempty"`
	Esi         *EthernetSegmentIdentifier `protobuf:"bytes,2,opt,name=esi" json:"esi,omitempty"`
	EthernetTag uint32                     `protobuf:"varint,3,opt,name=ethernet_tag,json=ethernetTag" json:"ethernet_tag,omitempty"`
	Label       uint32                     `protobuf:"varint,4,opt,name=label" json:"label,omitempty"`
}

func (m *EVPNEthernetAutoDiscoveryRoute) Reset()                    { *m = EVPNEthernetAutoDiscoveryRoute{} }
func (m *EVPNEthernetAutoDiscoveryRoute) String() string            { return proto.CompactTextString(m) }
func (*EVPNEthernetAutoDiscoveryRoute) ProtoMessage()               {}
func (*EVPNEthernetAutoDiscoveryRoute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *EVPNEthernetAutoDiscoveryRoute) GetRd() *google_protobuf.Any {
	if m != nil {
		return m.Rd
	}
	return nil
}

func (m *EVPNEthernetAutoDiscoveryRoute) GetEsi() *EthernetSegmentIdentifier {
	if m != nil {
		return m.Esi
	}
	return nil
}

func (m *EVPNEthernetAutoDiscoveryRoute) GetEthernetTag() uint32 {
	if m != nil {
		return m.EthernetTag
	}
	return 0
}

func (m *EVPNEthernetAutoDiscoveryRoute) GetLabel() uint32 {
	if m != nil {
		return m.Label
	}
	return 0
}

// EVPNMACIPAdvertisementRoute represents the NLRI for:
// - AFI=25, SAFI=70, RouteType=2
type EVPNMACIPAdvertisementRoute struct {
	// One of:
	// - RouteDistinguisherTwoOctetAS
	// - RouteDistinguisherIPAddressAS
	// - RouteDistinguisherFourOctetAS
	Rd          *google_protobuf.Any       `protobuf:"bytes,1,opt,name=rd" json:"rd,omitempty"`
	Esi         *EthernetSegmentIdentifier `protobuf:"bytes,2,opt,name=esi" json:"esi,omitempty"`
	EthernetTag uint32                     `protobuf:"varint,3,opt,name=ethernet_tag,json=ethernetTag" json:"ethernet_tag,omitempty"`
	MacAddress  string                     `protobuf:"bytes,4,opt,name=mac_address,json=macAddress" json:"mac_address,omitempty"`
	IpAddress   string                     `protobuf:"bytes,5,opt,name=ip_address,json=ipAddress" json:"ip_address,omitempty"`
	Labels      []uint32                   `protobuf:"varint,6,rep,packed,name=labels" json:"labels,omitempty"`
}

func (m *EVPNMACIPAdvertisementRoute) Reset()                    { *m = EVPNMACIPAdvertisementRoute{} }
func (m *EVPNMACIPAdvertisementRoute) String() string            { return proto.CompactTextString(m) }
func (*EVPNMACIPAdvertisementRoute) ProtoMessage()               {}
func (*EVPNMACIPAdvertisementRoute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *EVPNMACIPAdvertisementRoute) GetRd() *google_protobuf.Any {
	if m != nil {
		return m.Rd
	}
	return nil
}

func (m *EVPNMACIPAdvertisementRoute) GetEsi() *EthernetSegmentIdentifier {
	if m != nil {
		return m.Esi
	}
	return nil
}

func (m *EVPNMACIPAdvertisementRoute) GetEthernetTag() uint32 {
	if m != nil {
		return m.EthernetTag
	}
	return 0
}

func (m *EVPNMACIPAdvertisementRoute) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *EVPNMACIPAdvertisementRoute) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

func (m *EVPNMACIPAdvertisementRoute) GetLabels() []uint32 {
	if m != nil {
		return m.Labels
	}
	return nil
}

// EVPNInclusiveMulticastEthernetTagRoute represents the NLRI for:
// - AFI=25, SAFI=70, RouteType=3
type EVPNInclusiveMulticastEthernetTagRoute struct {
	// One of:
	// - RouteDistinguisherTwoOctetAS
	// - RouteDistinguisherIPAddressAS
	// - RouteDistinguisherFourOctetAS
	Rd          *google_protobuf.Any `protobuf:"bytes,1,opt,name=rd" json:"rd,omitempty"`
	EthernetTag uint32               `protobuf:"varint,2,opt,name=ethernet_tag,json=ethernetTag" json:"ethernet_tag,omitempty"`
	IpAddress   string               `protobuf:"bytes,3,opt,name=ip_address,json=ipAddress" json:"ip_address,omitempty"`
}

func (m *EVPNInclusiveMulticastEthernetTagRoute) Reset() {
	*m = EVPNInclusiveMulticastEthernetTagRoute{}
}
func (m *EVPNInclusiveMulticastEthernetTagRoute) String() string { return proto.CompactTextString(m) }
func (*EVPNInclusiveMulticastEthernetTagRoute) ProtoMessage()    {}
func (*EVPNInclusiveMulticastEthernetTagRoute) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{20}
}

func (m *EVPNInclusiveMulticastEthernetTagRoute) GetRd() *google_protobuf.Any {
	if m != nil {
		return m.Rd
	}
	return nil
}

func (m *EVPNInclusiveMulticastEthernetTagRoute) GetEthernetTag() uint32 {
	if m != nil {
		return m.EthernetTag
	}
	return 0
}

func (m *EVPNInclusiveMulticastEthernetTagRoute) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

// EVPNEthernetSegmentRoute represents the NLRI for:
// - AFI=25, SAFI=70, RouteType=4
type EVPNEthernetSegmentRoute struct {
	// One of:
	// - RouteDistinguisherTwoOctetAS
	// - RouteDistinguisherIPAddressAS
	// - RouteDistinguisherFourOctetAS
	Rd        *google_protobuf.Any       `protobuf:"bytes,1,opt,name=rd" json:"rd,omitempty"`
	Esi       *EthernetSegmentIdentifier `protobuf:"bytes,2,opt,name=esi" json:"esi,omitempty"`
	IpAddress string                     `protobuf:"bytes,3,opt,name=ip_address,json=ipAddress" json:"ip_address,omitempty"`
}

func (m *EVPNEthernetSegmentRoute) Reset()                    { *m = EVPNEthernetSegmentRoute{} }
func (m *EVPNEthernetSegmentRoute) String() string            { return proto.CompactTextString(m) }
func (*EVPNEthernetSegmentRoute) ProtoMessage()               {}
func (*EVPNEthernetSegmentRoute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *EVPNEthernetSegmentRoute) GetRd() *google_protobuf.Any {
	if m != nil {
		return m.Rd
	}
	return nil
}

func (m *EVPNEthernetSegmentRoute) GetEsi() *EthernetSegmentIdentifier {
	if m != nil {
		return m.Esi
	}
	return nil
}

func (m *EVPNEthernetSegmentRoute) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

// EVPNIPPrefixRoute represents the NLRI for:
// - AFI=25, SAFI=70, RouteType=5
type EVPNIPPrefixRoute struct {
	// One of:
	// - RouteDistinguisherTwoOctetAS
	// - RouteDistinguisherIPAddressAS
	// - RouteDistinguisherFourOctetAS
	Rd          *google_protobuf.Any       `protobuf:"bytes,1,opt,name=rd" json:"rd,omitempty"`
	Esi         *EthernetSegmentIdentifier `protobuf:"bytes,2,opt,name=esi" json:"esi,omitempty"`
	EthernetTag uint32                     `protobuf:"varint,3,opt,name=ethernet_tag,json=ethernetTag" json:"ethernet_tag,omitempty"`
	IpPrefix    string                     `protobuf:"bytes,4,opt,name=ip_prefix,json=ipPrefix" json:"ip_prefix,omitempty"`
	IpPrefixLen uint32                     `protobuf:"varint,5,opt,name=ip_prefix_len,json=ipPrefixLen" json:"ip_prefix_len,omitempty"`
	GwAddress   string                     `protobuf:"bytes,6,opt,name=gw_address,json=gwAddress" json:"gw_address,omitempty"`
	Label       uint32                     `protobuf:"varint,7,opt,name=label" json:"label,omitempty"`
}

func (m *EVPNIPPrefixRoute) Reset()                    { *m = EVPNIPPrefixRoute{} }
func (m *EVPNIPPrefixRoute) String() string            { return proto.CompactTextString(m) }
func (*EVPNIPPrefixRoute) ProtoMessage()               {}
func (*EVPNIPPrefixRoute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *EVPNIPPrefixRoute) GetRd() *google_protobuf.Any {
	if m != nil {
		return m.Rd
	}
	return nil
}

func (m *EVPNIPPrefixRoute) GetEsi() *EthernetSegmentIdentifier {
	if m != nil {
		return m.Esi
	}
	return nil
}

func (m *EVPNIPPrefixRoute) GetEthernetTag() uint32 {
	if m != nil {
		return m.EthernetTag
	}
	return 0
}

func (m *EVPNIPPrefixRoute) GetIpPrefix() string {
	if m != nil {
		return m.IpPrefix
	}
	return ""
}

func (m *EVPNIPPrefixRoute) GetIpPrefixLen() uint32 {
	if m != nil {
		return m.IpPrefixLen
	}
	return 0
}

func (m *EVPNIPPrefixRoute) GetGwAddress() string {
	if m != nil {
		return m.GwAddress
	}
	return ""
}

func (m *EVPNIPPrefixRoute) GetLabel() uint32 {
	if m != nil {
		return m.Label
	}
	return 0
}

// LabeledVPNIPAddressPrefix represents the NLRI for:
// - AFI=1, SAFI=128
// - AFI=2, SAFI=128
type LabeledVPNIPAddressPrefix struct {
	Labels []uint32 `protobuf:"varint,1,rep,packed,name=labels" json:"labels,omitempty"`
	// One of:
	// - TwoOctetAsSpecificExtended
	// - IPv4AddressSpecificExtended
	// - FourOctetAsSpecificExtended
	Rd        *google_protobuf.Any `protobuf:"bytes,2,opt,name=rd" json:"rd,omitempty"`
	PrefixLen uint32               `protobuf:"varint,3,opt,name=prefix_len,json=prefixLen" json:"prefix_len,omitempty"`
	Prefix    string               `protobuf:"bytes,4,opt,name=prefix" json:"prefix,omitempty"`
}

func (m *LabeledVPNIPAddressPrefix) Reset()                    { *m = LabeledVPNIPAddressPrefix{} }
func (m *LabeledVPNIPAddressPrefix) String() string            { return proto.CompactTextString(m) }
func (*LabeledVPNIPAddressPrefix) ProtoMessage()               {}
func (*LabeledVPNIPAddressPrefix) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *LabeledVPNIPAddressPrefix) GetLabels() []uint32 {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *LabeledVPNIPAddressPrefix) GetRd() *google_protobuf.Any {
	if m != nil {
		return m.Rd
	}
	return nil
}

func (m *LabeledVPNIPAddressPrefix) GetPrefixLen() uint32 {
	if m != nil {
		return m.PrefixLen
	}
	return 0
}

func (m *LabeledVPNIPAddressPrefix) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

// RouteTargetMembershipNLRI represents the NLRI for:
// - AFI=1, SAFI=132
type RouteTargetMembershipNLRI struct {
	As uint32 `protobuf:"varint,1,opt,name=as" json:"as,omitempty"`
	// One of:
	// - TwoOctetAsSpecificExtended
	// - IPv4AddressSpecificExtended
	// - FourOctetAsSpecificExtended
	Rt *google_protobuf.Any `protobuf:"bytes,2,opt,name=rt" json:"rt,omitempty"`
}

func (m *RouteTargetMembershipNLRI) Reset()                    { *m = RouteTargetMembershipNLRI{} }
func (m *RouteTargetMembershipNLRI) String() string            { return proto.CompactTextString(m) }
func (*RouteTargetMembershipNLRI) ProtoMessage()               {}
func (*RouteTargetMembershipNLRI) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *RouteTargetMembershipNLRI) GetAs() uint32 {
	if m != nil {
		return m.As
	}
	return 0
}

func (m *RouteTargetMembershipNLRI) GetRt() *google_protobuf.Any {
	if m != nil {
		return m.Rt
	}
	return nil
}

type FlowSpecIPPrefix struct {
	Type      uint32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	PrefixLen uint32 `protobuf:"varint,2,opt,name=prefix_len,json=prefixLen" json:"prefix_len,omitempty"`
	Prefix    string `protobuf:"bytes,3,opt,name=prefix" json:"prefix,omitempty"`
	// IPv6 only
	Offset uint32 `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
}

func (m *FlowSpecIPPrefix) Reset()                    { *m = FlowSpecIPPrefix{} }
func (m *FlowSpecIPPrefix) String() string            { return proto.CompactTextString(m) }
func (*FlowSpecIPPrefix) ProtoMessage()               {}
func (*FlowSpecIPPrefix) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *FlowSpecIPPrefix) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *FlowSpecIPPrefix) GetPrefixLen() uint32 {
	if m != nil {
		return m.PrefixLen
	}
	return 0
}

func (m *FlowSpecIPPrefix) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *FlowSpecIPPrefix) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type FlowSpecMAC struct {
	Type    uint32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
}

func (m *FlowSpecMAC) Reset()                    { *m = FlowSpecMAC{} }
func (m *FlowSpecMAC) String() string            { return proto.CompactTextString(m) }
func (*FlowSpecMAC) ProtoMessage()               {}
func (*FlowSpecMAC) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *FlowSpecMAC) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *FlowSpecMAC) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type FlowSpecComponentItem struct {
	// Operator for Numeric type, Operand for Bitmask type
	Op    uint32 `protobuf:"varint,1,opt,name=op" json:"op,omitempty"`
	Value uint64 `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
}

func (m *FlowSpecComponentItem) Reset()                    { *m = FlowSpecComponentItem{} }
func (m *FlowSpecComponentItem) String() string            { return proto.CompactTextString(m) }
func (*FlowSpecComponentItem) ProtoMessage()               {}
func (*FlowSpecComponentItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *FlowSpecComponentItem) GetOp() uint32 {
	if m != nil {
		return m.Op
	}
	return 0
}

func (m *FlowSpecComponentItem) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type FlowSpecComponent struct {
	Type  uint32                   `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Items []*FlowSpecComponentItem `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
}

func (m *FlowSpecComponent) Reset()                    { *m = FlowSpecComponent{} }
func (m *FlowSpecComponent) String() string            { return proto.CompactTextString(m) }
func (*FlowSpecComponent) ProtoMessage()               {}
func (*FlowSpecComponent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *FlowSpecComponent) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *FlowSpecComponent) GetItems() []*FlowSpecComponentItem {
	if m != nil {
		return m.Items
	}
	return nil
}

// FlowSpecNLRI represents the NLRI for:
// - AFI=1, SAFI=133
// - AFI=2, SAFI=133
type FlowSpecNLRI struct {
	// One of:
	// - FlowSpecIPPrefix
	// - FlowSpecMAC
	// - FlowSpecComponent
	Rules []*google_protobuf.Any `protobuf:"bytes,1,rep,name=rules" json:"rules,omitempty"`
}

func (m *FlowSpecNLRI) Reset()                    { *m = FlowSpecNLRI{} }
func (m *FlowSpecNLRI) String() string            { return proto.CompactTextString(m) }
func (*FlowSpecNLRI) ProtoMessage()               {}
func (*FlowSpecNLRI) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *FlowSpecNLRI) GetRules() []*google_protobuf.Any {
	if m != nil {
		return m.Rules
	}
	return nil
}

// VPNFlowSpecNLRI represents the NLRI for:
// - AFI=1, SAFI=134
// - AFI=2, SAFI=134
// - AFI=25, SAFI=134
type VPNFlowSpecNLRI struct {
	// One of:
	// - RouteDistinguisherTwoOctetAS
	// - RouteDistinguisherIPAddressAS
	// - RouteDistinguisherFourOctetAS
	Rd *google_protobuf.Any `protobuf:"bytes,1,opt,name=rd" json:"rd,omitempty"`
	// One of:
	// - FlowSpecIPPrefix
	// - FlowSpecMAC
	// - FlowSpecComponent
	Rules []*google_protobuf.Any `protobuf:"bytes,2,rep,name=rules" json:"rules,omitempty"`
}

func (m *VPNFlowSpecNLRI) Reset()                    { *m = VPNFlowSpecNLRI{} }
func (m *VPNFlowSpecNLRI) String() string            { return proto.CompactTextString(m) }
func (*VPNFlowSpecNLRI) ProtoMessage()               {}
func (*VPNFlowSpecNLRI) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *VPNFlowSpecNLRI) GetRd() *google_protobuf.Any {
	if m != nil {
		return m.Rd
	}
	return nil
}

func (m *VPNFlowSpecNLRI) GetRules() []*google_protobuf.Any {
	if m != nil {
		return m.Rules
	}
	return nil
}

// OpaqueNLRI represents the NLRI for:
// - AFI=16397, SAFI=241
type OpaqueNLRI struct {
	Key   []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *OpaqueNLRI) Reset()                    { *m = OpaqueNLRI{} }
func (m *OpaqueNLRI) String() string            { return proto.CompactTextString(m) }
func (*OpaqueNLRI) ProtoMessage()               {}
func (*OpaqueNLRI) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *OpaqueNLRI) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *OpaqueNLRI) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type MpReachNLRIAttribute struct {
	Family   uint32   `protobuf:"varint,1,opt,name=family" json:"family,omitempty"`
	NextHops []string `protobuf:"bytes,2,rep,name=next_hops,json=nextHops" json:"next_hops,omitempty"`
	// Each NLRI must be one of:
	// - IPAddressPrefix
	// - LabeledIPAddressPrefix
	// - EncapsulationNLRI
	// - EVPNEthernetAutoDiscoveryRoute
	// - EVPNMACIPAdvertisementRoute
	// - EVPNInclusiveMulticastEthernetTagRoute
	// - EVPNEthernetSegmentRoute
	// - EVPNIPPrefixRoute
	// - LabeledVPNIPAddressPrefix
	// - RouteTargetMembershipNLRI
	// - FlowSpecNLRI
	// - VPNFlowSpecNLRI
	// - OpaqueNLRI
	Nlris []*google_protobuf.Any `protobuf:"bytes,3,rep,name=nlris" json:"nlris,omitempty"`
}

func (m *MpReachNLRIAttribute) Reset()                    { *m = MpReachNLRIAttribute{} }
func (m *MpReachNLRIAttribute) String() string            { return proto.CompactTextString(m) }
func (*MpReachNLRIAttribute) ProtoMessage()               {}
func (*MpReachNLRIAttribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *MpReachNLRIAttribute) GetFamily() uint32 {
	if m != nil {
		return m.Family
	}
	return 0
}

func (m *MpReachNLRIAttribute) GetNextHops() []string {
	if m != nil {
		return m.NextHops
	}
	return nil
}

func (m *MpReachNLRIAttribute) GetNlris() []*google_protobuf.Any {
	if m != nil {
		return m.Nlris
	}
	return nil
}

type MpUnreachNLRIAttribute struct {
	Family uint32 `protobuf:"varint,1,opt,name=family" json:"family,omitempty"`
	// The same as NLRI field of MpReachNLRIAttribute
	Nlris []*google_protobuf.Any `protobuf:"bytes,3,rep,name=nlris" json:"nlris,omitempty"`
}

func (m *MpUnreachNLRIAttribute) Reset()                    { *m = MpUnreachNLRIAttribute{} }
func (m *MpUnreachNLRIAttribute) String() string            { return proto.CompactTextString(m) }
func (*MpUnreachNLRIAttribute) ProtoMessage()               {}
func (*MpUnreachNLRIAttribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *MpUnreachNLRIAttribute) GetFamily() uint32 {
	if m != nil {
		return m.Family
	}
	return 0
}

func (m *MpUnreachNLRIAttribute) GetNlris() []*google_protobuf.Any {
	if m != nil {
		return m.Nlris
	}
	return nil
}

type TwoOctetAsSpecificExtended struct {
	IsTransitive bool   `protobuf:"varint,1,opt,name=is_transitive,json=isTransitive" json:"is_transitive,omitempty"`
	SubType      uint32 `protobuf:"varint,2,opt,name=sub_type,json=subType" json:"sub_type,omitempty"`
	As           uint32 `protobuf:"varint,3,opt,name=as" json:"as,omitempty"`
	LocalAdmin   uint32 `protobuf:"varint,4,opt,name=local_admin,json=localAdmin" json:"local_admin,omitempty"`
}

func (m *TwoOctetAsSpecificExtended) Reset()                    { *m = TwoOctetAsSpecificExtended{} }
func (m *TwoOctetAsSpecificExtended) String() string            { return proto.CompactTextString(m) }
func (*TwoOctetAsSpecificExtended) ProtoMessage()               {}
func (*TwoOctetAsSpecificExtended) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *TwoOctetAsSpecificExtended) GetIsTransitive() bool {
	if m != nil {
		return m.IsTransitive
	}
	return false
}

func (m *TwoOctetAsSpecificExtended) GetSubType() uint32 {
	if m != nil {
		return m.SubType
	}
	return 0
}

func (m *TwoOctetAsSpecificExtended) GetAs() uint32 {
	if m != nil {
		return m.As
	}
	return 0
}

func (m *TwoOctetAsSpecificExtended) GetLocalAdmin() uint32 {
	if m != nil {
		return m.LocalAdmin
	}
	return 0
}

type IPv4AddressSpecificExtended struct {
	IsTransitive bool   `protobuf:"varint,1,opt,name=is_transitive,json=isTransitive" json:"is_transitive,omitempty"`
	SubType      uint32 `protobuf:"varint,2,opt,name=sub_type,json=subType" json:"sub_type,omitempty"`
	Address      string `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
	LocalAdmin   uint32 `protobuf:"varint,4,opt,name=local_admin,json=localAdmin" json:"local_admin,omitempty"`
}

func (m *IPv4AddressSpecificExtended) Reset()                    { *m = IPv4AddressSpecificExtended{} }
func (m *IPv4AddressSpecificExtended) String() string            { return proto.CompactTextString(m) }
func (*IPv4AddressSpecificExtended) ProtoMessage()               {}
func (*IPv4AddressSpecificExtended) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *IPv4AddressSpecificExtended) GetIsTransitive() bool {
	if m != nil {
		return m.IsTransitive
	}
	return false
}

func (m *IPv4AddressSpecificExtended) GetSubType() uint32 {
	if m != nil {
		return m.SubType
	}
	return 0
}

func (m *IPv4AddressSpecificExtended) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *IPv4AddressSpecificExtended) GetLocalAdmin() uint32 {
	if m != nil {
		return m.LocalAdmin
	}
	return 0
}

type FourOctetAsSpecificExtended struct {
	IsTransitive bool   `protobuf:"varint,1,opt,name=is_transitive,json=isTransitive" json:"is_transitive,omitempty"`
	SubType      uint32 `protobuf:"varint,2,opt,name=sub_type,json=subType" json:"sub_type,omitempty"`
	As           uint32 `protobuf:"varint,3,opt,name=as" json:"as,omitempty"`
	LocalAdmin   uint32 `protobuf:"varint,4,opt,name=local_admin,json=localAdmin" json:"local_admin,omitempty"`
}

func (m *FourOctetAsSpecificExtended) Reset()                    { *m = FourOctetAsSpecificExtended{} }
func (m *FourOctetAsSpecificExtended) String() string            { return proto.CompactTextString(m) }
func (*FourOctetAsSpecificExtended) ProtoMessage()               {}
func (*FourOctetAsSpecificExtended) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *FourOctetAsSpecificExtended) GetIsTransitive() bool {
	if m != nil {
		return m.IsTransitive
	}
	return false
}

func (m *FourOctetAsSpecificExtended) GetSubType() uint32 {
	if m != nil {
		return m.SubType
	}
	return 0
}

func (m *FourOctetAsSpecificExtended) GetAs() uint32 {
	if m != nil {
		return m.As
	}
	return 0
}

func (m *FourOctetAsSpecificExtended) GetLocalAdmin() uint32 {
	if m != nil {
		return m.LocalAdmin
	}
	return 0
}

type ValidationExtended struct {
	State uint32 `protobuf:"varint,1,opt,name=state" json:"state,omitempty"`
}

func (m *ValidationExtended) Reset()                    { *m = ValidationExtended{} }
func (m *ValidationExtended) String() string            { return proto.CompactTextString(m) }
func (*ValidationExtended) ProtoMessage()               {}
func (*ValidationExtended) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *ValidationExtended) GetState() uint32 {
	if m != nil {
		return m.State
	}
	return 0
}

type ColorExtended struct {
	Color uint32 `protobuf:"varint,1,opt,name=color" json:"color,omitempty"`
}

func (m *ColorExtended) Reset()                    { *m = ColorExtended{} }
func (m *ColorExtended) String() string            { return proto.CompactTextString(m) }
func (*ColorExtended) ProtoMessage()               {}
func (*ColorExtended) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *ColorExtended) GetColor() uint32 {
	if m != nil {
		return m.Color
	}
	return 0
}

type EncapExtended struct {
	TunnelType uint32 `protobuf:"varint,1,opt,name=tunnel_type,json=tunnelType" json:"tunnel_type,omitempty"`
}

func (m *EncapExtended) Reset()                    { *m = EncapExtended{} }
func (m *EncapExtended) String() string            { return proto.CompactTextString(m) }
func (*EncapExtended) ProtoMessage()               {}
func (*EncapExtended) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *EncapExtended) GetTunnelType() uint32 {
	if m != nil {
		return m.TunnelType
	}
	return 0
}

type DefaultGatewayExtended struct {
}

func (m *DefaultGatewayExtended) Reset()                    { *m = DefaultGatewayExtended{} }
func (m *DefaultGatewayExtended) String() string            { return proto.CompactTextString(m) }
func (*DefaultGatewayExtended) ProtoMessage()               {}
func (*DefaultGatewayExtended) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

type OpaqueExtended struct {
	IsTransitive bool   `protobuf:"varint,1,opt,name=is_transitive,json=isTransitive" json:"is_transitive,omitempty"`
	Value        []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *OpaqueExtended) Reset()                    { *m = OpaqueExtended{} }
func (m *OpaqueExtended) String() string            { return proto.CompactTextString(m) }
func (*OpaqueExtended) ProtoMessage()               {}
func (*OpaqueExtended) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *OpaqueExtended) GetIsTransitive() bool {
	if m != nil {
		return m.IsTransitive
	}
	return false
}

func (m *OpaqueExtended) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type ESILabelExtended struct {
	IsSingleActive bool   `protobuf:"varint,1,opt,name=is_single_active,json=isSingleActive" json:"is_single_active,omitempty"`
	Label          uint32 `protobuf:"varint,2,opt,name=label" json:"label,omitempty"`
}

func (m *ESILabelExtended) Reset()                    { *m = ESILabelExtended{} }
func (m *ESILabelExtended) String() string            { return proto.CompactTextString(m) }
func (*ESILabelExtended) ProtoMessage()               {}
func (*ESILabelExtended) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *ESILabelExtended) GetIsSingleActive() bool {
	if m != nil {
		return m.IsSingleActive
	}
	return false
}

func (m *ESILabelExtended) GetLabel() uint32 {
	if m != nil {
		return m.Label
	}
	return 0
}

type ESImportRouteTarget struct {
	EsImport string `protobuf:"bytes,1,opt,name=es_import,json=esImport" json:"es_import,omitempty"`
}

func (m *ESImportRouteTarget) Reset()                    { *m = ESImportRouteTarget{} }
func (m *ESImportRouteTarget) String() string            { return proto.CompactTextString(m) }
func (*ESImportRouteTarget) ProtoMessage()               {}
func (*ESImportRouteTarget) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *ESImportRouteTarget) GetEsImport() string {
	if m != nil {
		return m.EsImport
	}
	return ""
}

type MacMobilityExtended struct {
	IsSticky    bool   `protobuf:"varint,1,opt,name=is_sticky,json=isSticky" json:"is_sticky,omitempty"`
	SequenceNum uint32 `protobuf:"varint,2,opt,name=sequence_num,json=sequenceNum" json:"sequence_num,omitempty"`
}

func (m *MacMobilityExtended) Reset()                    { *m = MacMobilityExtended{} }
func (m *MacMobilityExtended) String() string            { return proto.CompactTextString(m) }
func (*MacMobilityExtended) ProtoMessage()               {}
func (*MacMobilityExtended) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *MacMobilityExtended) GetIsSticky() bool {
	if m != nil {
		return m.IsSticky
	}
	return false
}

func (m *MacMobilityExtended) GetSequenceNum() uint32 {
	if m != nil {
		return m.SequenceNum
	}
	return 0
}

type RouterMacExtended struct {
	Mac string `protobuf:"bytes,1,opt,name=mac" json:"mac,omitempty"`
}

func (m *RouterMacExtended) Reset()                    { *m = RouterMacExtended{} }
func (m *RouterMacExtended) String() string            { return proto.CompactTextString(m) }
func (*RouterMacExtended) ProtoMessage()               {}
func (*RouterMacExtended) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *RouterMacExtended) GetMac() string {
	if m != nil {
		return m.Mac
	}
	return ""
}

type TrafficRateExtended struct {
	As   uint32  `protobuf:"varint,1,opt,name=as" json:"as,omitempty"`
	Rate float32 `protobuf:"fixed32,2,opt,name=rate" json:"rate,omitempty"`
}

func (m *TrafficRateExtended) Reset()                    { *m = TrafficRateExtended{} }
func (m *TrafficRateExtended) String() string            { return proto.CompactTextString(m) }
func (*TrafficRateExtended) ProtoMessage()               {}
func (*TrafficRateExtended) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *TrafficRateExtended) GetAs() uint32 {
	if m != nil {
		return m.As
	}
	return 0
}

func (m *TrafficRateExtended) GetRate() float32 {
	if m != nil {
		return m.Rate
	}
	return 0
}

type TrafficActionExtended struct {
	Terminal bool `protobuf:"varint,1,opt,name=terminal" json:"terminal,omitempty"`
	Sample   bool `protobuf:"varint,2,opt,name=sample" json:"sample,omitempty"`
}

func (m *TrafficActionExtended) Reset()                    { *m = TrafficActionExtended{} }
func (m *TrafficActionExtended) String() string            { return proto.CompactTextString(m) }
func (*TrafficActionExtended) ProtoMessage()               {}
func (*TrafficActionExtended) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *TrafficActionExtended) GetTerminal() bool {
	if m != nil {
		return m.Terminal
	}
	return false
}

func (m *TrafficActionExtended) GetSample() bool {
	if m != nil {
		return m.Sample
	}
	return false
}

type RedirectTwoOctetAsSpecificExtended struct {
	As         uint32 `protobuf:"varint,1,opt,name=as" json:"as,omitempty"`
	LocalAdmin uint32 `protobuf:"varint,2,opt,name=local_admin,json=localAdmin" json:"local_admin,omitempty"`
}

func (m *RedirectTwoOctetAsSpecificExtended) Reset()         { *m = RedirectTwoOctetAsSpecificExtended{} }
func (m *RedirectTwoOctetAsSpecificExtended) String() string { return proto.CompactTextString(m) }
func (*RedirectTwoOctetAsSpecificExtended) ProtoMessage()    {}
func (*RedirectTwoOctetAsSpecificExtended) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{48}
}

func (m *RedirectTwoOctetAsSpecificExtended) GetAs() uint32 {
	if m != nil {
		return m.As
	}
	return 0
}

func (m *RedirectTwoOctetAsSpecificExtended) GetLocalAdmin() uint32 {
	if m != nil {
		return m.LocalAdmin
	}
	return 0
}

type RedirectIPv4AddressSpecificExtended struct {
	Address    string `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	LocalAdmin uint32 `protobuf:"varint,2,opt,name=local_admin,json=localAdmin" json:"local_admin,omitempty"`
}

func (m *RedirectIPv4AddressSpecificExtended) Reset()         { *m = RedirectIPv4AddressSpecificExtended{} }
func (m *RedirectIPv4AddressSpecificExtended) String() string { return proto.CompactTextString(m) }
func (*RedirectIPv4AddressSpecificExtended) ProtoMessage()    {}
func (*RedirectIPv4AddressSpecificExtended) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{49}
}

func (m *RedirectIPv4AddressSpecificExtended) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *RedirectIPv4AddressSpecificExtended) GetLocalAdmin() uint32 {
	if m != nil {
		return m.LocalAdmin
	}
	return 0
}

type RedirectFourOctetAsSpecificExtended struct {
	As         uint32 `protobuf:"varint,1,opt,name=as" json:"as,omitempty"`
	LocalAdmin uint32 `protobuf:"varint,2,opt,name=local_admin,json=localAdmin" json:"local_admin,omitempty"`
}

func (m *RedirectFourOctetAsSpecificExtended) Reset()         { *m = RedirectFourOctetAsSpecificExtended{} }
func (m *RedirectFourOctetAsSpecificExtended) String() string { return proto.CompactTextString(m) }
func (*RedirectFourOctetAsSpecificExtended) ProtoMessage()    {}
func (*RedirectFourOctetAsSpecificExtended) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{50}
}

func (m *RedirectFourOctetAsSpecificExtended) GetAs() uint32 {
	if m != nil {
		return m.As
	}
	return 0
}

func (m *RedirectFourOctetAsSpecificExtended) GetLocalAdmin() uint32 {
	if m != nil {
		return m.LocalAdmin
	}
	return 0
}

type TrafficRemarkExtended struct {
	Dscp uint32 `protobuf:"varint,1,opt,name=dscp" json:"dscp,omitempty"`
}

func (m *TrafficRemarkExtended) Reset()                    { *m = TrafficRemarkExtended{} }
func (m *TrafficRemarkExtended) String() string            { return proto.CompactTextString(m) }
func (*TrafficRemarkExtended) ProtoMessage()               {}
func (*TrafficRemarkExtended) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

func (m *TrafficRemarkExtended) GetDscp() uint32 {
	if m != nil {
		return m.Dscp
	}
	return 0
}

type UnknownExtended struct {
	Type  uint32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *UnknownExtended) Reset()                    { *m = UnknownExtended{} }
func (m *UnknownExtended) String() string            { return proto.CompactTextString(m) }
func (*UnknownExtended) ProtoMessage()               {}
func (*UnknownExtended) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{52} }

func (m *UnknownExtended) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *UnknownExtended) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type ExtendedCommunitiesAttribute struct {
	// Each Community must be one of:
	// - TwoOctetAsSpecificExtended
	// - IPv4AddressSpecificExtended
	// - FourOctetAsSpecificExtended
	// - OpaqueExtended
	// - ESILabelExtended
	// - MacMobilityExtended
	// - RouterMacExtended
	// - TrafficRateExtended
	// - TrafficActionExtended
	// - RedirectTwoOctetAsSpecificExtended
	// - RedirectIPv4AddressSpecificExtended
	// - RedirectFourOctetAsSpecificExtended
	// - TrafficRemarkExtended
	// - UnknownExtended
	Communities []*google_protobuf.Any `protobuf:"bytes,1,rep,name=communities" json:"communities,omitempty"`
}

func (m *ExtendedCommunitiesAttribute) Reset()                    { *m = ExtendedCommunitiesAttribute{} }
func (m *ExtendedCommunitiesAttribute) String() string            { return proto.CompactTextString(m) }
func (*ExtendedCommunitiesAttribute) ProtoMessage()               {}
func (*ExtendedCommunitiesAttribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{53} }

func (m *ExtendedCommunitiesAttribute) GetCommunities() []*google_protobuf.Any {
	if m != nil {
		return m.Communities
	}
	return nil
}

type As4PathAttribute struct {
	Segments []*AsSegment `protobuf:"bytes,1,rep,name=segments" json:"segments,omitempty"`
}

func (m *As4PathAttribute) Reset()                    { *m = As4PathAttribute{} }
func (m *As4PathAttribute) String() string            { return proto.CompactTextString(m) }
func (*As4PathAttribute) ProtoMessage()               {}
func (*As4PathAttribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{54} }

func (m *As4PathAttribute) GetSegments() []*AsSegment {
	if m != nil {
		return m.Segments
	}
	return nil
}

type As4AggregatorAttribute struct {
	As      uint32 `protobuf:"varint,2,opt,name=as" json:"as,omitempty"`
	Address string `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
}

func (m *As4AggregatorAttribute) Reset()                    { *m = As4AggregatorAttribute{} }
func (m *As4AggregatorAttribute) String() string            { return proto.CompactTextString(m) }
func (*As4AggregatorAttribute) ProtoMessage()               {}
func (*As4AggregatorAttribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{55} }

func (m *As4AggregatorAttribute) GetAs() uint32 {
	if m != nil {
		return m.As
	}
	return 0
}

func (m *As4AggregatorAttribute) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type PmsiTunnelAttribute struct {
	Flags uint32 `protobuf:"varint,1,opt,name=flags" json:"flags,omitempty"`
	Type  uint32 `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Label uint32 `protobuf:"varint,3,opt,name=label" json:"label,omitempty"`
	Id    []byte `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *PmsiTunnelAttribute) Reset()                    { *m = PmsiTunnelAttribute{} }
func (m *PmsiTunnelAttribute) String() string            { return proto.CompactTextString(m) }
func (*PmsiTunnelAttribute) ProtoMessage()               {}
func (*PmsiTunnelAttribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{56} }

func (m *PmsiTunnelAttribute) GetFlags() uint32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *PmsiTunnelAttribute) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *PmsiTunnelAttribute) GetLabel() uint32 {
	if m != nil {
		return m.Label
	}
	return 0
}

func (m *PmsiTunnelAttribute) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

type TunnelEncapSubTLVEncapsulation struct {
	Key    uint32 `protobuf:"varint,1,opt,name=key" json:"key,omitempty"`
	Cookie []byte `protobuf:"bytes,2,opt,name=cookie,proto3" json:"cookie,omitempty"`
}

func (m *TunnelEncapSubTLVEncapsulation) Reset()                    { *m = TunnelEncapSubTLVEncapsulation{} }
func (m *TunnelEncapSubTLVEncapsulation) String() string            { return proto.CompactTextString(m) }
func (*TunnelEncapSubTLVEncapsulation) ProtoMessage()               {}
func (*TunnelEncapSubTLVEncapsulation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{57} }

func (m *TunnelEncapSubTLVEncapsulation) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *TunnelEncapSubTLVEncapsulation) GetCookie() []byte {
	if m != nil {
		return m.Cookie
	}
	return nil
}

type TunnelEncapSubTLVProtocol struct {
	Protocol uint32 `protobuf:"varint,1,opt,name=protocol" json:"protocol,omitempty"`
}

func (m *TunnelEncapSubTLVProtocol) Reset()                    { *m = TunnelEncapSubTLVProtocol{} }
func (m *TunnelEncapSubTLVProtocol) String() string            { return proto.CompactTextString(m) }
func (*TunnelEncapSubTLVProtocol) ProtoMessage()               {}
func (*TunnelEncapSubTLVProtocol) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{58} }

func (m *TunnelEncapSubTLVProtocol) GetProtocol() uint32 {
	if m != nil {
		return m.Protocol
	}
	return 0
}

type TunnelEncapSubTLVColor struct {
	Color uint32 `protobuf:"varint,1,opt,name=color" json:"color,omitempty"`
}

func (m *TunnelEncapSubTLVColor) Reset()                    { *m = TunnelEncapSubTLVColor{} }
func (m *TunnelEncapSubTLVColor) String() string            { return proto.CompactTextString(m) }
func (*TunnelEncapSubTLVColor) ProtoMessage()               {}
func (*TunnelEncapSubTLVColor) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{59} }

func (m *TunnelEncapSubTLVColor) GetColor() uint32 {
	if m != nil {
		return m.Color
	}
	return 0
}

type TunnelEncapSubTLVUnknown struct {
	Type  uint32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *TunnelEncapSubTLVUnknown) Reset()                    { *m = TunnelEncapSubTLVUnknown{} }
func (m *TunnelEncapSubTLVUnknown) String() string            { return proto.CompactTextString(m) }
func (*TunnelEncapSubTLVUnknown) ProtoMessage()               {}
func (*TunnelEncapSubTLVUnknown) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{60} }

func (m *TunnelEncapSubTLVUnknown) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *TunnelEncapSubTLVUnknown) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type TunnelEncapTLV struct {
	Type uint32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	// Each TLV must be one of:
	// - TunnelEncapSubTLVEncapsulation
	// - TunnelEncapSubTLVProtocol
	// - TunnelEncapSubTLVColor
	// - TunnelEncapSubTLVUnknown
	Tlvs []*google_protobuf.Any `protobuf:"bytes,2,rep,name=tlvs" json:"tlvs,omitempty"`
}

func (m *TunnelEncapTLV) Reset()                    { *m = TunnelEncapTLV{} }
func (m *TunnelEncapTLV) String() string            { return proto.CompactTextString(m) }
func (*TunnelEncapTLV) ProtoMessage()               {}
func (*TunnelEncapTLV) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{61} }

func (m *TunnelEncapTLV) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *TunnelEncapTLV) GetTlvs() []*google_protobuf.Any {
	if m != nil {
		return m.Tlvs
	}
	return nil
}

type TunnelEncapAttribute struct {
	Tlvs []*TunnelEncapTLV `protobuf:"bytes,1,rep,name=tlvs" json:"tlvs,omitempty"`
}

func (m *TunnelEncapAttribute) Reset()                    { *m = TunnelEncapAttribute{} }
func (m *TunnelEncapAttribute) String() string            { return proto.CompactTextString(m) }
func (*TunnelEncapAttribute) ProtoMessage()               {}
func (*TunnelEncapAttribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{62} }

func (m *TunnelEncapAttribute) GetTlvs() []*TunnelEncapTLV {
	if m != nil {
		return m.Tlvs
	}
	return nil
}

type IPv6AddressSpecificExtended struct {
	IsTransitive bool   `protobuf:"varint,1,opt,name=is_transitive,json=isTransitive" json:"is_transitive,omitempty"`
	SubType      uint32 `protobuf:"varint,2,opt,name=sub_type,json=subType" json:"sub_type,omitempty"`
	Address      string `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
	LocalAdmin   uint32 `protobuf:"varint,4,opt,name=local_admin,json=localAdmin" json:"local_admin,omitempty"`
}

func (m *IPv6AddressSpecificExtended) Reset()                    { *m = IPv6AddressSpecificExtended{} }
func (m *IPv6AddressSpecificExtended) String() string            { return proto.CompactTextString(m) }
func (*IPv6AddressSpecificExtended) ProtoMessage()               {}
func (*IPv6AddressSpecificExtended) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{63} }

func (m *IPv6AddressSpecificExtended) GetIsTransitive() bool {
	if m != nil {
		return m.IsTransitive
	}
	return false
}

func (m *IPv6AddressSpecificExtended) GetSubType() uint32 {
	if m != nil {
		return m.SubType
	}
	return 0
}

func (m *IPv6AddressSpecificExtended) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *IPv6AddressSpecificExtended) GetLocalAdmin() uint32 {
	if m != nil {
		return m.LocalAdmin
	}
	return 0
}

type RedirectIPv6AddressSpecificExtended struct {
	Address    string `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	LocalAdmin uint32 `protobuf:"varint,2,opt,name=local_admin,json=localAdmin" json:"local_admin,omitempty"`
}

func (m *RedirectIPv6AddressSpecificExtended) Reset()         { *m = RedirectIPv6AddressSpecificExtended{} }
func (m *RedirectIPv6AddressSpecificExtended) String() string { return proto.CompactTextString(m) }
func (*RedirectIPv6AddressSpecificExtended) ProtoMessage()    {}
func (*RedirectIPv6AddressSpecificExtended) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{64}
}

func (m *RedirectIPv6AddressSpecificExtended) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *RedirectIPv6AddressSpecificExtended) GetLocalAdmin() uint32 {
	if m != nil {
		return m.LocalAdmin
	}
	return 0
}

type IP6ExtendedCommunitiesAttribute struct {
	// Each Community must be one of:
	// - IPv6AddressSpecificExtended
	// - RedirectIPv6AddressSpecificExtended
	Communities []*google_protobuf.Any `protobuf:"bytes,1,rep,name=communities" json:"communities,omitempty"`
}

func (m *IP6ExtendedCommunitiesAttribute) Reset()         { *m = IP6ExtendedCommunitiesAttribute{} }
func (m *IP6ExtendedCommunitiesAttribute) String() string { return proto.CompactTextString(m) }
func (*IP6ExtendedCommunitiesAttribute) ProtoMessage()    {}
func (*IP6ExtendedCommunitiesAttribute) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{65}
}

func (m *IP6ExtendedCommunitiesAttribute) GetCommunities() []*google_protobuf.Any {
	if m != nil {
		return m.Communities
	}
	return nil
}

type AigpTLVIGPMetric struct {
	Metric uint64 `protobuf:"varint,1,opt,name=metric" json:"metric,omitempty"`
}

func (m *AigpTLVIGPMetric) Reset()                    { *m = AigpTLVIGPMetric{} }
func (m *AigpTLVIGPMetric) String() string            { return proto.CompactTextString(m) }
func (*AigpTLVIGPMetric) ProtoMessage()               {}
func (*AigpTLVIGPMetric) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{66} }

func (m *AigpTLVIGPMetric) GetMetric() uint64 {
	if m != nil {
		return m.Metric
	}
	return 0
}

type AigpTLVUnknown struct {
	Type  uint32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *AigpTLVUnknown) Reset()                    { *m = AigpTLVUnknown{} }
func (m *AigpTLVUnknown) String() string            { return proto.CompactTextString(m) }
func (*AigpTLVUnknown) ProtoMessage()               {}
func (*AigpTLVUnknown) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{67} }

func (m *AigpTLVUnknown) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *AigpTLVUnknown) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type AigpAttribute struct {
	// Each TLV must be one of:
	// - AigpTLVIGPMetric
	// - AigpTLVUnknown
	Tlvs []*google_protobuf.Any `protobuf:"bytes,1,rep,name=tlvs" json:"tlvs,omitempty"`
}

func (m *AigpAttribute) Reset()                    { *m = AigpAttribute{} }
func (m *AigpAttribute) String() string            { return proto.CompactTextString(m) }
func (*AigpAttribute) ProtoMessage()               {}
func (*AigpAttribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{68} }

func (m *AigpAttribute) GetTlvs() []*google_protobuf.Any {
	if m != nil {
		return m.Tlvs
	}
	return nil
}

type LargeCommunity struct {
	GlobalAdmin uint32 `protobuf:"varint,1,opt,name=global_admin,json=globalAdmin" json:"global_admin,omitempty"`
	LocalData1  uint32 `protobuf:"varint,2,opt,name=local_data1,json=localData1" json:"local_data1,omitempty"`
	LocalData2  uint32 `protobuf:"varint,3,opt,name=local_data2,json=localData2" json:"local_data2,omitempty"`
}

func (m *LargeCommunity) Reset()                    { *m = LargeCommunity{} }
func (m *LargeCommunity) String() string            { return proto.CompactTextString(m) }
func (*LargeCommunity) ProtoMessage()               {}
func (*LargeCommunity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{69} }

func (m *LargeCommunity) GetGlobalAdmin() uint32 {
	if m != nil {
		return m.GlobalAdmin
	}
	return 0
}

func (m *LargeCommunity) GetLocalData1() uint32 {
	if m != nil {
		return m.LocalData1
	}
	return 0
}

func (m *LargeCommunity) GetLocalData2() uint32 {
	if m != nil {
		return m.LocalData2
	}
	return 0
}

type LargeCommunitiesAttribute struct {
	Communities []*LargeCommunity `protobuf:"bytes,1,rep,name=communities" json:"communities,omitempty"`
}

func (m *LargeCommunitiesAttribute) Reset()                    { *m = LargeCommunitiesAttribute{} }
func (m *LargeCommunitiesAttribute) String() string            { return proto.CompactTextString(m) }
func (*LargeCommunitiesAttribute) ProtoMessage()               {}
func (*LargeCommunitiesAttribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{70} }

func (m *LargeCommunitiesAttribute) GetCommunities() []*LargeCommunity {
	if m != nil {
		return m.Communities
	}
	return nil
}

type UnknownAttribute struct {
	Flags uint32 `protobuf:"varint,1,opt,name=flags" json:"flags,omitempty"`
	Type  uint32 `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Value []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *UnknownAttribute) Reset()                    { *m = UnknownAttribute{} }
func (m *UnknownAttribute) String() string            { return proto.CompactTextString(m) }
func (*UnknownAttribute) ProtoMessage()               {}
func (*UnknownAttribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{71} }

func (m *UnknownAttribute) GetFlags() uint32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *UnknownAttribute) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *UnknownAttribute) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*OriginAttribute)(nil), "bgpapi.OriginAttribute")
	proto.RegisterType((*AsSegment)(nil), "bgpapi.AsSegment")
	proto.RegisterType((*AsPathAttribute)(nil), "bgpapi.AsPathAttribute")
	proto.RegisterType((*NextHopAttribute)(nil), "bgpapi.NextHopAttribute")
	proto.RegisterType((*MultiExitDiscAttribute)(nil), "bgpapi.MultiExitDiscAttribute")
	proto.RegisterType((*LocalPrefAttribute)(nil), "bgpapi.LocalPrefAttribute")
	proto.RegisterType((*AtomicAggregateAttribute)(nil), "bgpapi.AtomicAggregateAttribute")
	proto.RegisterType((*AggregatorAttribute)(nil), "bgpapi.AggregatorAttribute")
	proto.RegisterType((*CommunitiesAttribute)(nil), "bgpapi.CommunitiesAttribute")
	proto.RegisterType((*OriginatorIdAttribute)(nil), "bgpapi.OriginatorIdAttribute")
	proto.RegisterType((*ClusterListAttribute)(nil), "bgpapi.ClusterListAttribute")
	proto.RegisterType((*IPAddressPrefix)(nil), "bgpapi.IPAddressPrefix")
	proto.RegisterType((*LabeledIPAddressPrefix)(nil), "bgpapi.LabeledIPAddressPrefix")
	proto.RegisterType((*EncapsulationNLRI)(nil), "bgpapi.EncapsulationNLRI")
	proto.RegisterType((*RouteDistinguisherTwoOctetAS)(nil), "bgpapi.RouteDistinguisherTwoOctetAS")
	proto.RegisterType((*RouteDistinguisherIPAddress)(nil), "bgpapi.RouteDistinguisherIPAddress")
	proto.RegisterType((*RouteDistinguisherFourOctetAS)(nil), "bgpapi.RouteDistinguisherFourOctetAS")
	proto.RegisterType((*EthernetSegmentIdentifier)(nil), "bgpapi.EthernetSegmentIdentifier")
	proto.RegisterType((*EVPNEthernetAutoDiscoveryRoute)(nil), "bgpapi.EVPNEthernetAutoDiscoveryRoute")
	proto.RegisterType((*EVPNMACIPAdvertisementRoute)(nil), "bgpapi.EVPNMACIPAdvertisementRoute")
	proto.RegisterType((*EVPNInclusiveMulticastEthernetTagRoute)(nil), "bgpapi.EVPNInclusiveMulticastEthernetTagRoute")
	proto.RegisterType((*EVPNEthernetSegmentRoute)(nil), "bgpapi.EVPNEthernetSegmentRoute")
	proto.RegisterType((*EVPNIPPrefixRoute)(nil), "bgpapi.EVPNIPPrefixRoute")
	proto.RegisterType((*LabeledVPNIPAddressPrefix)(nil), "bgpapi.LabeledVPNIPAddressPrefix")
	proto.RegisterType((*RouteTargetMembershipNLRI)(nil), "bgpapi.RouteTargetMembershipNLRI")
	proto.RegisterType((*FlowSpecIPPrefix)(nil), "bgpapi.FlowSpecIPPrefix")
	proto.RegisterType((*FlowSpecMAC)(nil), "bgpapi.FlowSpecMAC")
	proto.RegisterType((*FlowSpecComponentItem)(nil), "bgpapi.FlowSpecComponentItem")
	proto.RegisterType((*FlowSpecComponent)(nil), "bgpapi.FlowSpecComponent")
	proto.RegisterType((*FlowSpecNLRI)(nil), "bgpapi.FlowSpecNLRI")
	proto.RegisterType((*VPNFlowSpecNLRI)(nil), "bgpapi.VPNFlowSpecNLRI")
	proto.RegisterType((*OpaqueNLRI)(nil), "bgpapi.OpaqueNLRI")
	proto.RegisterType((*MpReachNLRIAttribute)(nil), "bgpapi.MpReachNLRIAttribute")
	proto.RegisterType((*MpUnreachNLRIAttribute)(nil), "bgpapi.MpUnreachNLRIAttribute")
	proto.RegisterType((*TwoOctetAsSpecificExtended)(nil), "bgpapi.TwoOctetAsSpecificExtended")
	proto.RegisterType((*IPv4AddressSpecificExtended)(nil), "bgpapi.IPv4AddressSpecificExtended")
	proto.RegisterType((*FourOctetAsSpecificExtended)(nil), "bgpapi.FourOctetAsSpecificExtended")
	proto.RegisterType((*ValidationExtended)(nil), "bgpapi.ValidationExtended")
	proto.RegisterType((*ColorExtended)(nil), "bgpapi.ColorExtended")
	proto.RegisterType((*EncapExtended)(nil), "bgpapi.EncapExtended")
	proto.RegisterType((*DefaultGatewayExtended)(nil), "bgpapi.DefaultGatewayExtended")
	proto.RegisterType((*OpaqueExtended)(nil), "bgpapi.OpaqueExtended")
	proto.RegisterType((*ESILabelExtended)(nil), "bgpapi.ESILabelExtended")
	proto.RegisterType((*ESImportRouteTarget)(nil), "bgpapi.ESImportRouteTarget")
	proto.RegisterType((*MacMobilityExtended)(nil), "bgpapi.MacMobilityExtended")
	proto.RegisterType((*RouterMacExtended)(nil), "bgpapi.RouterMacExtended")
	proto.RegisterType((*TrafficRateExtended)(nil), "bgpapi.TrafficRateExtended")
	proto.RegisterType((*TrafficActionExtended)(nil), "bgpapi.TrafficActionExtended")
	proto.RegisterType((*RedirectTwoOctetAsSpecificExtended)(nil), "bgpapi.RedirectTwoOctetAsSpecificExtended")
	proto.RegisterType((*RedirectIPv4AddressSpecificExtended)(nil), "bgpapi.RedirectIPv4AddressSpecificExtended")
	proto.RegisterType((*RedirectFourOctetAsSpecificExtended)(nil), "bgpapi.RedirectFourOctetAsSpecificExtended")
	proto.RegisterType((*TrafficRemarkExtended)(nil), "bgpapi.TrafficRemarkExtended")
	proto.RegisterType((*UnknownExtended)(nil), "bgpapi.UnknownExtended")
	proto.RegisterType((*ExtendedCommunitiesAttribute)(nil), "bgpapi.ExtendedCommunitiesAttribute")
	proto.RegisterType((*As4PathAttribute)(nil), "bgpapi.As4PathAttribute")
	proto.RegisterType((*As4AggregatorAttribute)(nil), "bgpapi.As4AggregatorAttribute")
	proto.RegisterType((*PmsiTunnelAttribute)(nil), "bgpapi.PmsiTunnelAttribute")
	proto.RegisterType((*TunnelEncapSubTLVEncapsulation)(nil), "bgpapi.TunnelEncapSubTLVEncapsulation")
	proto.RegisterType((*TunnelEncapSubTLVProtocol)(nil), "bgpapi.TunnelEncapSubTLVProtocol")
	proto.RegisterType((*TunnelEncapSubTLVColor)(nil), "bgpapi.TunnelEncapSubTLVColor")
	proto.RegisterType((*TunnelEncapSubTLVUnknown)(nil), "bgpapi.TunnelEncapSubTLVUnknown")
	proto.RegisterType((*TunnelEncapTLV)(nil), "bgpapi.TunnelEncapTLV")
	proto.RegisterType((*TunnelEncapAttribute)(nil), "bgpapi.TunnelEncapAttribute")
	proto.RegisterType((*IPv6AddressSpecificExtended)(nil), "bgpapi.IPv6AddressSpecificExtended")
	proto.RegisterType((*RedirectIPv6AddressSpecificExtended)(nil), "bgpapi.RedirectIPv6AddressSpecificExtended")
	proto.RegisterType((*IP6ExtendedCommunitiesAttribute)(nil), "bgpapi.IP6ExtendedCommunitiesAttribute")
	proto.RegisterType((*AigpTLVIGPMetric)(nil), "bgpapi.AigpTLVIGPMetric")
	proto.RegisterType((*AigpTLVUnknown)(nil), "bgpapi.AigpTLVUnknown")
	proto.RegisterType((*AigpAttribute)(nil), "bgpapi.AigpAttribute")
	proto.RegisterType((*LargeCommunity)(nil), "bgpapi.LargeCommunity")
	proto.RegisterType((*LargeCommunitiesAttribute)(nil), "bgpapi.LargeCommunitiesAttribute")
	proto.RegisterType((*UnknownAttribute)(nil), "bgpapi.UnknownAttribute")
}

func init() { proto.RegisterFile("attribute.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1866 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0xe9, 0x6e, 0x23, 0xc7,
	0xf1, 0x07, 0x0f, 0x69, 0xc9, 0xa2, 0xa8, 0x83, 0xd2, 0x12, 0x94, 0x64, 0x79, 0xd7, 0xed, 0xbf,
	0xff, 0x51, 0x14, 0xac, 0x9c, 0x68, 0x17, 0x1b, 0xaf, 0x8d, 0x20, 0xa1, 0x25, 0xd9, 0x66, 0x2c,
	0x6a, 0xe9, 0xd1, 0x01, 0x04, 0x30, 0xc0, 0x34, 0x67, 0x9a, 0xa3, 0x86, 0xe6, 0xf2, 0x74, 0x8f,
	0x8e, 0x27, 0xc8, 0xa7, 0x04, 0xfe, 0x90, 0x0f, 0x79, 0x90, 0xbc, 0x59, 0x5e, 0x20, 0xe8, 0x6b,
	0x0e, 0x51, 0xd4, 0xb1, 0xce, 0x02, 0xfb, 0xad, 0xab, 0x59, 0x5d, 0x55, 0xfd, 0xeb, 0xaa, 0x5f,
	0x15, 0x07, 0x16, 0x30, 0xe7, 0x31, 0x1d, 0x25, 0x9c, 0x6c, 0x47, 0x71, 0xc8, 0xc3, 0xd6, 0xec,
	0xc8, 0x8d, 0x70, 0x44, 0xd7, 0x56, 0xdd, 0x30, 0x74, 0x3d, 0xf2, 0xb9, 0xdc, 0x1d, 0x25, 0xe3,
	0xcf, 0x71, 0x70, 0xad, 0x54, 0xd0, 0xaf, 0x61, 0xe1, 0x6d, 0x4c, 0x5d, 0x1a, 0x74, 0xcd, 0xd9,
	0x56, 0x1b, 0x66, 0x43, 0xb9, 0xd5, 0x29, 0x3d, 0x2f, 0x6d, 0x36, 0x2d, 0x2d, 0xa1, 0x37, 0x50,
	0xef, 0xb2, 0x23, 0xe2, 0xfa, 0x24, 0xe0, 0xad, 0x16, 0x54, 0xf9, 0x75, 0x44, 0xb4, 0x8a, 0x5c,
	0xb7, 0x3a, 0xf0, 0x24, 0x48, 0xfc, 0x11, 0x89, 0x59, 0xa7, 0xfc, 0xbc, 0xb2, 0xd9, 0xb4, 0x8c,
	0x88, 0xfe, 0x04, 0x0b, 0x5d, 0x36, 0xc0, 0xfc, 0x2c, 0xf3, 0xf2, 0x02, 0x6a, 0x4c, 0xd9, 0x62,
	0x9d, 0xd2, 0xf3, 0xca, 0x66, 0x63, 0x67, 0x69, 0x5b, 0x85, 0xbb, 0x9d, 0x7a, 0xb1, 0x52, 0x15,
	0xf4, 0x02, 0x16, 0x0f, 0xc9, 0x15, 0xff, 0x2e, 0x8c, 0x32, 0x13, 0xab, 0x50, 0x0b, 0xc8, 0x15,
	0x1f, 0x9e, 0x85, 0x91, 0x8c, 0xa3, 0x6e, 0x3d, 0x09, 0x94, 0x0e, 0xda, 0x82, 0x76, 0x3f, 0xf1,
	0x38, 0xdd, 0xbf, 0xa2, 0x7c, 0x8f, 0x32, 0x3b, 0x3b, 0xb4, 0x08, 0x15, 0x9f, 0x38, 0x3a, 0x6e,
	0xb1, 0x44, 0x2f, 0xa1, 0x75, 0x10, 0xda, 0xd8, 0x1b, 0xc4, 0x64, 0x9c, 0xe9, 0x6d, 0x00, 0x78,
	0x62, 0x77, 0x18, 0xc5, 0x64, 0xac, 0xd5, 0xeb, 0x9e, 0xd1, 0x43, 0x6b, 0xd0, 0xe9, 0xf2, 0xd0,
	0xa7, 0x76, 0xd7, 0x75, 0x63, 0xe2, 0x62, 0x4e, 0xd2, 0xa3, 0xe8, 0x8f, 0xb0, 0x6c, 0x76, 0xc3,
	0x38, 0xb3, 0x38, 0x0f, 0x65, 0x2c, 0x90, 0x11, 0x96, 0xca, 0x98, 0x09, 0xb8, 0xb0, 0xe3, 0xc4,
	0x84, 0xb1, 0x4e, 0x45, 0x45, 0xaf, 0x45, 0xf4, 0x05, 0xac, 0xec, 0x86, 0xbe, 0x9f, 0x04, 0x94,
	0x53, 0xc2, 0x32, 0x0b, 0xcf, 0xa1, 0x61, 0x67, 0xfb, 0x12, 0xb6, 0xa6, 0x95, 0xdf, 0x42, 0xbf,
	0x82, 0xa7, 0xea, 0x39, 0x85, 0xeb, 0x9e, 0x53, 0x70, 0x4e, 0x1d, 0x8d, 0x52, 0x99, 0x3a, 0x68,
	0x13, 0x56, 0x76, 0xbd, 0x84, 0x71, 0x12, 0x1f, 0x50, 0xc6, 0x0b, 0xf0, 0x50, 0x47, 0x99, 0xae,
	0x5b, 0x62, 0x89, 0xbe, 0x83, 0x85, 0xde, 0xa0, 0xab, 0x22, 0x13, 0x57, 0xa7, 0x57, 0x02, 0x9b,
	0x48, 0xae, 0x86, 0x1e, 0x31, 0x59, 0x52, 0x57, 0x3b, 0x07, 0x24, 0x10, 0x09, 0xa4, 0x04, 0x79,
	0xd9, 0xba, 0xa5, 0x25, 0xe4, 0x42, 0xfb, 0x00, 0x8f, 0x88, 0x47, 0x9c, 0x9b, 0x06, 0xdb, 0x30,
	0xeb, 0x89, 0x5f, 0xcc, 0x9d, 0xb4, 0x74, 0xc3, 0x51, 0x79, 0xba, 0xa3, 0x4a, 0xc1, 0xd1, 0x0b,
	0x58, 0xda, 0x0f, 0x6c, 0x1c, 0xb1, 0xc4, 0xc3, 0x9c, 0x86, 0xc1, 0xe1, 0x81, 0xd5, 0xcb, 0xc3,
	0x5d, 0x2a, 0xc2, 0x3d, 0x80, 0x8f, 0xac, 0x30, 0xe1, 0x64, 0x8f, 0x32, 0x4e, 0x03, 0x37, 0xa1,
	0xec, 0x8c, 0xc4, 0xc7, 0x97, 0xe1, 0x5b, 0x9b, 0x13, 0xde, 0x3d, 0x6a, 0xad, 0xc0, 0x0c, 0x76,
	0xfc, 0xb4, 0x1e, 0x94, 0xd0, 0x5a, 0x83, 0x1a, 0x66, 0x8c, 0xba, 0x01, 0x71, 0x74, 0x64, 0xa9,
	0x8c, 0xde, 0xc2, 0xfa, 0xa4, 0xc5, 0xf4, 0xd2, 0x45, 0x83, 0xf5, 0x87, 0x18, 0xfc, 0x01, 0x36,
	0x26, 0x0d, 0x7e, 0x13, 0x26, 0xf1, 0xbb, 0xc7, 0xb8, 0x0f, 0xab, 0xfb, 0xfc, 0x8c, 0xc4, 0x01,
	0xe1, 0xba, 0xdc, 0x7a, 0x0e, 0x09, 0x38, 0x1d, 0x53, 0x12, 0xdf, 0x5a, 0xde, 0x2b, 0x30, 0x73,
	0x81, 0xbd, 0x84, 0x48, 0x4b, 0x73, 0x96, 0x12, 0xd0, 0xbf, 0x4b, 0xf0, 0xf1, 0xfe, 0xe9, 0xe0,
	0xd0, 0xd8, 0xea, 0x26, 0x3c, 0x14, 0x15, 0x17, 0x5e, 0x90, 0xf8, 0x5a, 0xc6, 0xdc, 0xfa, 0x3f,
	0x28, 0xc7, 0x2a, 0xf7, 0x1a, 0x3b, 0x2b, 0xdb, 0x8a, 0x8b, 0xb6, 0x0d, 0x17, 0x6d, 0x77, 0x83,
	0x6b, 0xab, 0x1c, 0x3b, 0xad, 0x97, 0x50, 0x21, 0x8c, 0x4a, 0xe3, 0x8d, 0x9d, 0x4f, 0x0c, 0x17,
	0x4c, 0x0d, 0xd1, 0x12, 0xda, 0xad, 0x4f, 0x60, 0x8e, 0x68, 0x8d, 0x21, 0xc7, 0xae, 0xcc, 0x83,
	0xa6, 0xd5, 0x30, 0x7b, 0xc7, 0xd8, 0x15, 0x61, 0xcb, 0x6c, 0xea, 0x54, 0x15, 0x32, 0x52, 0x40,
	0xff, 0x29, 0xc1, 0xba, 0x08, 0xbb, 0xdf, 0xdd, 0x15, 0xef, 0x72, 0x41, 0x62, 0x4e, 0x19, 0x91,
	0xa4, 0xf3, 0x01, 0xc4, 0xfc, 0x0c, 0x1a, 0x3e, 0xb6, 0x87, 0x26, 0x5f, 0xab, 0x32, 0x4d, 0xc0,
	0xc7, 0xb6, 0xc9, 0xa0, 0x0d, 0x00, 0x1a, 0xa5, 0xbf, 0xcf, 0xc8, 0xdf, 0xeb, 0x34, 0x32, 0x3f,
	0x67, 0xf5, 0x34, 0x9b, 0xaf, 0x27, 0xf4, 0x73, 0x09, 0xfe, 0x5f, 0xdc, 0xba, 0x17, 0xd8, 0x5e,
	0xc2, 0xe8, 0x05, 0x91, 0x24, 0x69, 0x63, 0xc6, 0xf7, 0x33, 0xef, 0x8f, 0x01, 0xe0, 0xe6, 0x5d,
	0xca, 0x93, 0x77, 0x29, 0x86, 0x5a, 0xb9, 0x11, 0x2a, 0xfa, 0x67, 0x09, 0x3a, 0xf9, 0xfc, 0x31,
	0xd4, 0xff, 0xbe, 0x5f, 0xe1, 0x9e, 0xb0, 0xfe, 0x56, 0x86, 0x25, 0x89, 0xd4, 0x40, 0x51, 0xd4,
	0x87, 0x90, 0x15, 0xeb, 0x50, 0xa7, 0xd1, 0x50, 0x33, 0x9e, 0xca, 0x89, 0x1a, 0x8d, 0x34, 0x85,
	0x22, 0x68, 0xa6, 0x3f, 0x4a, 0xb6, 0x9c, 0x51, 0x06, 0x8c, 0x82, 0xe0, 0xcb, 0x0d, 0x00, 0xf7,
	0x32, 0xbd, 0xf3, 0xac, 0xba, 0xb3, 0x7b, 0x99, 0xa3, 0x25, 0x55, 0x29, 0x4f, 0xf2, 0x95, 0xf2,
	0x73, 0x09, 0x56, 0x35, 0x6d, 0x4b, 0x3c, 0x1e, 0xc6, 0xdc, 0x0a, 0xa9, 0xf2, 0x3d, 0x48, 0x15,
	0xf9, 0xbd, 0x32, 0x9d, 0xdf, 0xab, 0x05, 0x7e, 0xff, 0x01, 0x56, 0xe5, 0x7b, 0x1c, 0xe3, 0xd8,
	0x25, 0xbc, 0x4f, 0xe4, 0x90, 0x71, 0x46, 0x23, 0xc9, 0xf3, 0xaa, 0xcd, 0x96, 0xd2, 0x36, 0x2b,
	0x22, 0xe1, 0xf7, 0x44, 0xc2, 0x51, 0x02, 0x8b, 0xdf, 0x78, 0xe1, 0xe5, 0x51, 0x44, 0x6c, 0xf3,
	0xe4, 0xb7, 0x92, 0xe0, 0xbb, 0x75, 0x24, 0x39, 0x53, 0x8d, 0xc7, 0x8c, 0x70, 0xcd, 0x42, 0x5a,
	0x42, 0x5f, 0x41, 0xc3, 0xb8, 0xed, 0x77, 0x77, 0xa7, 0x4d, 0x55, 0xe6, 0xc5, 0xca, 0xc5, 0xbe,
	0xf5, 0x07, 0x78, 0x6a, 0x0e, 0xef, 0x86, 0x7e, 0x14, 0x06, 0x22, 0xad, 0x38, 0xf1, 0x05, 0x04,
	0x7a, 0x24, 0x6a, 0x5a, 0xe5, 0x30, 0x2a, 0x32, 0x77, 0xd5, 0x30, 0xf7, 0x8f, 0xb0, 0x34, 0x71,
	0xfc, 0xd6, 0x08, 0x5e, 0xc2, 0x0c, 0xe5, 0xc4, 0x57, 0x53, 0x5d, 0x63, 0x67, 0xc3, 0x64, 0xf4,
	0xad, 0xce, 0x2d, 0xa5, 0x8b, 0xbe, 0x84, 0x39, 0xf3, 0xbb, 0x7c, 0x96, 0x2d, 0x98, 0x89, 0x13,
	0x8f, 0x98, 0x61, 0xef, 0xf6, 0x97, 0x50, 0x2a, 0xc8, 0x86, 0x85, 0xd3, 0xc1, 0x61, 0xe1, 0xf8,
	0xc3, 0x2a, 0x2f, 0x75, 0x52, 0xbe, 0xdf, 0xc9, 0x2b, 0x80, 0xb7, 0x11, 0xfe, 0x29, 0x21, 0xd2,
	0xfe, 0x22, 0x54, 0xce, 0xc9, 0xb5, 0x74, 0x30, 0x67, 0x89, 0xe5, 0x94, 0x76, 0x77, 0x09, 0x2b,
	0xfd, 0xc8, 0x22, 0xd8, 0x3e, 0x13, 0xc7, 0x0a, 0x43, 0xf3, 0x18, 0xfb, 0xd4, 0xbb, 0x36, 0x43,
	0xb3, 0x92, 0x44, 0xcd, 0x9a, 0x19, 0x55, 0x45, 0x55, 0xb7, 0x6a, 0x7a, 0x48, 0x65, 0x22, 0xdc,
	0xc0, 0x8b, 0xa9, 0xa0, 0x9f, 0x3b, 0xc2, 0x95, 0x2a, 0xe8, 0x47, 0x68, 0xf7, 0xa3, 0x93, 0x20,
	0x7e, 0xb8, 0xeb, 0xc7, 0x58, 0xff, 0x7b, 0x09, 0xd6, 0xd2, 0x89, 0x87, 0x09, 0xd4, 0xe9, 0x98,
	0xda, 0xfb, 0x57, 0x9c, 0x04, 0x0e, 0x71, 0x5a, 0x9f, 0x42, 0x93, 0xb2, 0x21, 0x8f, 0x71, 0xc0,
	0x28, 0xa7, 0x17, 0x2a, 0x3d, 0x6a, 0xd6, 0x1c, 0x65, 0xc7, 0xe9, 0x9e, 0x18, 0xc7, 0x59, 0x32,
	0x1a, 0xca, 0xf4, 0x51, 0x85, 0xf1, 0x84, 0x25, 0xa3, 0x63, 0x91, 0x41, 0xaa, 0x26, 0x2b, 0x69,
	0x4d, 0x3e, 0x83, 0x86, 0x1a, 0xae, 0xd5, 0xcc, 0xa2, 0x6a, 0x42, 0xcd, 0xdb, 0x5d, 0xb1, 0x83,
	0xfe, 0x55, 0x82, 0xf5, 0xde, 0xe0, 0xe2, 0x95, 0x26, 0x9b, 0xff, 0x79, 0x40, 0x53, 0x67, 0xef,
	0xfb, 0x43, 0xfb, 0x47, 0x09, 0xd6, 0xb3, 0xc9, 0xeb, 0x03, 0xc0, 0x6a, 0x0b, 0x5a, 0xa7, 0xd8,
	0xa3, 0x8e, 0x1c, 0x75, 0xd3, 0x30, 0x56, 0x60, 0x86, 0x71, 0xcc, 0x4d, 0x25, 0x2b, 0x01, 0x7d,
	0x06, 0xcd, 0xdd, 0xd0, 0x0b, 0xe3, 0xbc, 0x9a, 0x2d, 0x36, 0x8c, 0x9a, 0x14, 0xd0, 0x6f, 0xa1,
	0x29, 0x07, 0xe8, 0x54, 0xed, 0x19, 0x34, 0x78, 0x12, 0x04, 0xc4, 0x1b, 0xe6, 0xd8, 0x01, 0xd4,
	0x96, 0x88, 0x1a, 0x75, 0xa0, 0xbd, 0x47, 0xc6, 0x38, 0xf1, 0xf8, 0xb7, 0x98, 0x93, 0x4b, 0x7c,
	0x6d, 0x8e, 0xa2, 0xef, 0x61, 0x5e, 0xd5, 0xd9, 0xe3, 0x10, 0x4a, 0xcb, 0xaf, 0x92, 0x2f, 0x3f,
	0x0b, 0x16, 0xf7, 0x8f, 0x7a, 0xb2, 0x1d, 0xa5, 0xe6, 0x36, 0x61, 0x91, 0xb2, 0x21, 0xa3, 0x81,
	0xeb, 0x91, 0x21, 0xb6, 0x73, 0x16, 0xe7, 0x29, 0x3b, 0x92, 0xdb, 0x5d, 0xdb, 0xd8, 0x54, 0x0d,
	0xae, 0x9c, 0x6f, 0x70, 0x3b, 0xb0, 0xbc, 0x7f, 0xd4, 0xf3, 0xa3, 0x30, 0xe6, 0xb9, 0xae, 0x22,
	0x2a, 0x97, 0xb0, 0x21, 0x95, 0xfb, 0x7a, 0x50, 0xaf, 0x11, 0xa6, 0xf4, 0xd0, 0x09, 0x2c, 0xf7,
	0xb1, 0xdd, 0x0f, 0x47, 0xd4, 0xa3, 0x3c, 0xbd, 0xab, 0xec, 0xd0, 0x6c, 0xc8, 0x38, 0xb5, 0xcf,
	0xaf, 0x75, 0x0c, 0x35, 0xca, 0x8e, 0xa4, 0x2c, 0x3a, 0x3c, 0x23, 0x3f, 0x25, 0x24, 0xb0, 0xc9,
	0x30, 0x48, 0x7c, 0x33, 0x2b, 0x99, 0xbd, 0xc3, 0xc4, 0x47, 0x9f, 0xc1, 0x92, 0x0c, 0x21, 0xee,
	0xe3, 0x2c, 0xa1, 0xc4, 0x3f, 0x56, 0x6c, 0xeb, 0x10, 0xc4, 0x12, 0xbd, 0x81, 0xe5, 0xe3, 0x18,
	0x8f, 0xc7, 0xd4, 0xb6, 0x30, 0xcf, 0x70, 0xbd, 0xd9, 0xf9, 0x5a, 0x50, 0x8d, 0x45, 0x06, 0x08,
	0x47, 0x65, 0x4b, 0xae, 0xd1, 0xf7, 0xf0, 0x54, 0x1f, 0x15, 0x98, 0xe4, 0xf2, 0x65, 0x0d, 0x6a,
	0x9c, 0xc4, 0x3e, 0x0d, 0xb0, 0x67, 0x22, 0x37, 0xb2, 0x60, 0x18, 0x86, 0xfd, 0xc8, 0x53, 0xa6,
	0x6a, 0x96, 0x96, 0xd0, 0x09, 0x20, 0x8b, 0x38, 0x34, 0x26, 0x36, 0xbf, 0x83, 0x3c, 0x6e, 0x86,
	0x75, 0x23, 0xa1, 0xcb, 0x13, 0x09, 0xfd, 0x57, 0xf8, 0xd4, 0x98, 0xbd, 0x8b, 0x03, 0xa6, 0xfe,
	0xa1, 0xbb, 0xdf, 0xc3, 0x69, 0xe6, 0xe1, 0xae, 0x52, 0x7e, 0x74, 0xe4, 0xbf, 0x49, 0xd1, 0xb5,
	0x88, 0x8f, 0xe3, 0xf3, 0xd4, 0x52, 0x0b, 0xaa, 0x0e, 0xb3, 0x4d, 0x4f, 0x96, 0x6b, 0xf4, 0x15,
	0x2c, 0x9c, 0x04, 0xe7, 0x41, 0x78, 0x19, 0xe4, 0xd5, 0x1e, 0xf8, 0xb7, 0xeb, 0x14, 0x3e, 0x32,
	0xa7, 0x6e, 0xfd, 0x54, 0xf0, 0x7a, 0xf2, 0x53, 0xc1, 0xb4, 0x16, 0x50, 0xf8, 0x80, 0xd0, 0x85,
	0xc5, 0x2e, 0x7b, 0xf5, 0x8b, 0x3e, 0xd5, 0x7c, 0x0d, 0xed, 0x2e, 0x7b, 0xf5, 0xcb, 0xbe, 0x80,
	0x10, 0x58, 0x1e, 0xf8, 0x8c, 0x1e, 0x4b, 0x82, 0xc9, 0x0c, 0xac, 0xc0, 0xcc, 0xd8, 0xc3, 0xae,
	0x79, 0x13, 0x25, 0xa4, 0xa8, 0x95, 0x8b, 0xa8, 0xa9, 0x52, 0xaf, 0xe4, 0x4a, 0x5d, 0x7f, 0x05,
	0xa9, 0x4a, 0x20, 0xcb, 0xd4, 0x41, 0x7f, 0x86, 0x8f, 0x95, 0x0b, 0xc9, 0x76, 0x47, 0xc9, 0xe8,
	0xf8, 0xe0, 0xb4, 0xf0, 0xe5, 0x20, 0x3f, 0x17, 0x34, 0xd5, 0x5c, 0xd0, 0x86, 0x59, 0x3b, 0x0c,
	0xcf, 0xa9, 0x79, 0x10, 0x2d, 0xa1, 0xdf, 0xc3, 0xea, 0x84, 0xad, 0x81, 0xc0, 0xd9, 0x0e, 0x3d,
	0x51, 0x5d, 0x91, 0x5e, 0x6b, 0x5b, 0xa9, 0x8c, 0xb6, 0xa1, 0x3d, 0x71, 0x50, 0x92, 0xf4, 0x14,
	0x72, 0xde, 0x83, 0xce, 0x84, 0xbe, 0x4e, 0xa4, 0x47, 0x24, 0xd0, 0x21, 0xcc, 0xe7, 0xac, 0x1c,
	0x1f, 0x9c, 0xde, 0x7a, 0x76, 0x13, 0xaa, 0xdc, 0xbb, 0xb8, 0x7b, 0x9e, 0x92, 0x1a, 0xe8, 0x6b,
	0x58, 0xc9, 0xd9, 0xcb, 0x9e, 0x6c, 0x4b, 0x5b, 0x50, 0x89, 0xd3, 0x36, 0x89, 0x53, 0xf4, 0xad,
	0x6d, 0xe8, 0xae, 0xff, 0xfa, 0x03, 0xec, 0xfa, 0x45, 0x4e, 0x7a, 0xfd, 0x1e, 0x38, 0xe9, 0x2f,
	0xf0, 0xac, 0x37, 0x78, 0xfd, 0x5e, 0x8a, 0x7a, 0x0b, 0x16, 0xbb, 0xd4, 0x15, 0x40, 0xf7, 0xbe,
	0x1d, 0xf4, 0x09, 0x8f, 0xa9, 0x2d, 0xd2, 0xd8, 0x97, 0x2b, 0x19, 0x68, 0xd5, 0xd2, 0x12, 0xfa,
	0x12, 0xe6, 0xb5, 0xee, 0xe3, 0x73, 0xea, 0x0d, 0x34, 0xc5, 0xd9, 0x2c, 0xe0, 0xcd, 0xc2, 0xe3,
	0xdf, 0x95, 0x3e, 0x09, 0xcc, 0x1f, 0x88, 0xbe, 0x6b, 0xee, 0x2d, 0xdb, 0xa5, 0xeb, 0x85, 0xa3,
	0x14, 0x31, 0xe5, 0xbe, 0xa1, 0xf6, 0x24, 0x64, 0x19, 0xa6, 0x0e, 0xe6, 0xf8, 0x77, 0x05, 0x4c,
	0xf7, 0xc4, 0x4e, 0x51, 0x61, 0x47, 0x73, 0x41, 0xa6, 0xb0, 0x83, 0x4e, 0xc4, 0x7f, 0xdb, 0x9c,
	0xdb, 0x02, 0xdc, 0x5f, 0xdc, 0x06, 0x77, 0x9a, 0xc1, 0xc5, 0x70, 0x8b, 0x80, 0x5b, 0xb0, 0xa8,
	0xd1, 0x7b, 0x47, 0xee, 0x9a, 0x1c, 0x7d, 0x46, 0xb3, 0x12, 0xb5, 0x97, 0xff, 0x0d, 0x00, 0x00,
	0xff, 0xff, 0x40, 0xa5, 0x46, 0x98, 0xe6, 0x17, 0x00, 0x00,
}
